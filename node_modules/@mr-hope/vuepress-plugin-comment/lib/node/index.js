"use strict";
const vuepress_shared_1 = require("@mr-hope/vuepress-shared");
const path_1 = require("path");
const locales_1 = require("./locales");
const commentPlugin = (options, context) => {
    const { themeConfig } = context;
    const commentOptions = Object.keys(options).length > 0
        ? options
        : themeConfig.comment || { type: "disable" };
    const userPageInfoLocales = (0, vuepress_shared_1.getLocales)(context, locales_1.pageInfoLocales, commentOptions.pageInfoLocales);
    const userWalineLocales = commentOptions.type === "waline"
        ? (0, vuepress_shared_1.getLocales)(context, locales_1.walineLocales, commentOptions.walineLocales)
        : {};
    const userValineLocales = commentOptions.type === "valine"
        ? (0, vuepress_shared_1.getLocales)(context, locales_1.valineLocales, commentOptions.valineLocales)
        : {};
    // remove locales so that they won't be injected in client twice
    delete commentOptions.pageInfoLocales;
    if ("walineLocales" in commentOptions)
        delete commentOptions.walineLocales;
    if ("valineLocales" in commentOptions)
        delete commentOptions.valineLocales;
    const config = {
        name: "comment",
        define: () => ({
            COMMENT_OPTIONS: commentOptions,
            PAGE_INFO_LOCALES: userPageInfoLocales,
            WALINE_LOCALES: userWalineLocales,
            VALINE_LOCALES: userValineLocales,
        }),
        alias: {
            "@Valine": commentOptions.type === "valine"
                ? (0, path_1.resolve)(__dirname, "../client/Valine.vue")
                : "@mr-hope/vuepress-shared/lib/esm/noopModule",
            "@Waline": commentOptions.type === "waline"
                ? (0, path_1.resolve)(__dirname, "../client/Waline.vue")
                : "@mr-hope/vuepress-shared/lib/esm/noopModule",
        },
        plugins: [
            ["@mr-hope/git", themeConfig.git || true],
            ["@mr-hope/reading-time", { wordPerminute: options.wordPerminute }],
        ],
    };
    if (commentOptions.type === "vssue")
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        config.plugins.push(["@vssue/vuepress-plugin-vssue", commentOptions]);
    return config;
};
module.exports = commentPlugin;
//# sourceMappingURL=index.js.map